name: Pull Request

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events for the develop and master branches
  pull_request:
    branches: [ develop, master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Build and Test project
        run: |
          echo Build and Test project
          ./mvnw clean verify

      - name: Coverage Information
        id: coverage_info
        run: |
          per_package_info=$(awk -F "," '/three-hundred-sixty/ { missed[$2] += $4 } { covered[$2] += $5  } END { for(x in missed)printf ("%s %s%%\n", x, (covered[x]/(covered[x]+missed[x]))*100) }' target/site/jacoco/jacoco.csv)
          per_package_info="${per_package_info//'%'/'%25'}"
          per_package_info="${per_package_info//$'\n'/'%0A'}"
          per_package_info="${per_package_info//$'\r'/'%0D'}"

          overall_info=$(awk -F "," '/three-hundred-sixty/ { missed[$1] += $4 } { covered[$1] += $5  } END { for(x in missed)printf ("Overall coverage: %s%%\n", (covered[x]/(covered[x]+missed[x]))*100) }' target/site/jacoco/jacoco.csv)

          echo "::set-output name=per-package::$per_package_info"
          echo "::set-output name=overall::$overall_info"

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@master
        with:
          message: |
            Built and tested. Parsed code coverage information:

            ```
            ${{ steps.coverage_info.outputs.per-package }}
            ```

            ```
            ${{ steps.coverage_info.outputs.overall }}
            ```
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
