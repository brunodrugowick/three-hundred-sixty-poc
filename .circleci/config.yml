# Orb 'circleci/maven@0.0.12' resolved to 'circleci/maven@0.0.12'
version: 2
jobs:
  maven/test:
##    Remember to set the 'CC_TEST_REPORTER_ID' environment variable to your proper value, in your CI provider!
#
    environment:
      JACOCO_SOURCE_PATH: 'src/main/java'
    docker:
      - image: circleci/openjdk:13-jdk-buster
    steps:
      - checkout
      - run:
          name: Generate Cache Checksum
          command: find . -name 'pom.xml' | sort | xargs cat > /tmp/maven_cache_seed
      - restore_cache:
          key: maven-{{ checksum "/tmp/maven_cache_seed" }}
      - run:
          name: Install Dependencies
          command: mvn dependency:go-offline --settings 'pom.xml'
      - run:
          name: Code Climate Setup test-reporter
          command: |
            # download test reporter as a static binary
                     curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                     chmod +x ./cc-test-reporter
#      - run:
#          name: Run Maven Tests
#          command: mvn verify --settings 'pom.xml'
      - run:
          name: Code Climate Run tests (coverage with Jacoco)
          command: |
            ./cc-test-reporter before-build
            mvn verify --settings 'pom.xml'
            ./cc-test-reporter \
              format-coverage target/site/jacoco/jacoco.xml     \
              --input-type jacoco
            ./cc-test-reporter upload-coverage
##           See: https://github.com/codeclimate/test-reporter/issues/259
#            ./cc-test-reporter after-build --coverage-input-type jacoco --exit-code $?

      - save_cache:
          paths:
            - ~/.m2
          key: maven-{{ checksum "/tmp/maven_cache_seed" }}
      - store_test_results:
          path: target/surefire-reports
workflows:
  maven_test:
    jobs:
      - maven/test
  version: 2

# Original config.yml file:
# version: 2.1
# 
# orbs:
#   maven: circleci/maven@0.0.12
# 
# workflows:
#   maven_test:
#     jobs:
#       - maven/test # checkout, build, test, and upload test results